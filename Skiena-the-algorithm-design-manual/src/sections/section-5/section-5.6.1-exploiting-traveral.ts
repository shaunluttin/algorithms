import getFigure from "../../figures/getFigure";
import dump from "../../utilities/dump";
import {
  printGraph,
  readGraph,
} from "./section-5.2-data-structures-for-graphs";
import { bfs, initializeSearch } from "./section-5.6-breadth-first-search";
import { dfs } from "./section-5.8-depth-first-search";

export const processVertexEarly = (v: number): void => {
  dump("processVertexEarly", { v });
};

export const processVertexLate = (v: number): void => {
  dump("processVertexLate:", { v });
};

export const processEdge = (x: number, y: number): void => {
  dump("processEdge:", { x, y });
};

const graphString = getFigure("5.10");

// TODO Make the graph functions pure so we do not need to create graph1 and graph2.
const graph1 = readGraph(graphString);
const graph2 = readGraph(graphString);

dump(`bfs:start`, {
  graph1,
  printed: printGraph(graph1),
});

initializeSearch(graph1);
bfs(graph1, 1, {
  processEdge,
  processVertexEarly,
  processVertexLate,
});
dump(`bfs:end`, { graph1 });

dump(`dfs:start`, {
  graph2,
  printed: printGraph(graph2),
});

initializeSearch(graph2);
dfs(graph2, 1, {
  processEdge,
  processVertexEarly,
  processVertexLate,
});
dump(`dfs:end`, { graph2 });
